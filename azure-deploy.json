{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "pricingTier": {
      "type": "string",
      "allowedValues": [
        "PerGB2018",
        "Free",
        "Standalone",
        "PerNode",
        "Standard",
        "Premium"
      ],
      "defaultValue": "PerGB2018",
      "metadata": {
        "description": "Pricing tier: pergb2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
      }
    },
    "dataRetention": {
      "type": "int",
      "defaultValue": 30
    },
    "allowedIPAddresses": {
      "type": "string",
      "metadata": {
        "description": "The sourceAddressPrefixes allowed to connect to this deployment"
      }
    },
    "windowsServerVersion": {
      "type": "string",
      "defaultValue": "latest",
      "allowedValues": [
        "17763.1999.2106060321",
        "latest"
      ],
      "metadata": {
        "description": "The specific version for the Server VM."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "allowedValues": [
        "Standard_A2",
        "Standard_A3",
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_DS2",
        "Standard_DS11"
      ],
      "metadata": {
        "description": "Size of the virtual machine. Reference: https://docs.microsoft.com/en-us/azure/virtual-machines/sizes-general"
      }
    },
    "collectWinEventProviders": {
      "type": "array",
      "metadata": {
        "description": "Do you want to configure your Log Analytics Workspace to collect Windows Event Logs from several pre-defined event providers?. Windows Security Auditing is not enabled through this option. It is enabled through the Data Connectors parameter."
      },
      "defaultValue": [
        "System",
        "Microsoft-Windows-Sysmon/Operational",
        "Microsoft-Windows-TerminalServices-RemoteConnectionManager/Operational",
        "Microsoft-Windows-Bits-Client/Operational",
        "Microsoft-Windows-TerminalServices-LocalSessionManager/Operational",
        "Directory Service",
        "Microsoft-Windows-DNS-Client/Operational",
        "Microsoft-Windows-Windows Firewall With Advanced Security/Firewall",
        "Windows PowerShell",
        "Microsoft-Windows-PowerShell/Operational",
        "Microsoft-Windows-WMI-Activity/Operational",
        "Microsoft-Windows-TaskScheduler/Operational"
      ]
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "doenablesysmon": {
      "type": "bool",
      "defaultValue": true
    },
    "doenablesysmonparsers": {
      "type": "bool",
      "defaultValue": false
    },
    "doenableaadconnect": {
      "type": "bool",
      "defaultValue": false
    },
    "doimmediatePurgeDataOn30Days": {
      "type": "bool",
      "defaultValue": true
    },
    "dowscount": {
      "type": "int",
      "defaultValue": 1
    }
  },
  "variables": {
    "uri_sysmonWindowsParserPackTemplate": "https://raw.githubusercontent.com/DefensiveOrigins/DO-LAB/main/Monitoring/SysmonFullDeployment.json",
    "uri_DeploySentinel": "https://raw.githubusercontent.com/DefensiveOrigins/DO-LAB/main/Sentinel2Go/azuredeploy.json",
    "uri_collectWinDataSources": "https://raw.githubusercontent.com/DefensiveOrigins/DO-LAB/main/Sentinel2Go/templates/winDataSources.json",
    "uri_azure_win10_ad": "https://raw.githubusercontent.com/DefensiveOrigins/DO-LAB/main/Win10-AD/azuredeploy.json",
    "uri_azure_c2": "https://raw.githubusercontent.com/DefensiveOrigins/DO-LAB/main/C2/azuredeploy.json",
    "uri_azure_monitoragents": "https://raw.githubusercontent.com/DefensiveOrigins/DO-LAB/main/MonitorAgents/windows.json",
    "uri_dcrassociation": "https://raw.githubusercontent.com/DefensiveOrigins/DO-LAB/main/AssociateDCR/association.json",
    "dataCollectionRuleName": "WindowsDCR",
    "doadminusername": "doadmin",
    "doadminpassword": "DOLabAdmin1!",
    "donameprefix": "WS0",
    "doWSKU": "21h1-pro",
    "doServerSKU": "2019-Datacenter",
    "doServerVer": "latest",
    "dofqdn": "doazlab.com",
    "doc2": "metasploit",
    "doc2ubuntusku": "20_04-lts",
    "doworkspaceprefix": "LA-workspace",
    "doremoteaccessmode": "AllowPublicIP"
  },
  "resources": [
    {
      "name": "DeploySentinel",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('uri_DeploySentinel')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[variables('doworkspaceprefix')]"
          },
          "pricingTier": {
            "value": "[parameters('pricingTier')]"
          },
          "dataRetention": {
            "value": "[parameters('dataRetention')]"
          },
          "immediatePurgeDataOn30Days": {
            "value": "[parameters('doimmediatePurgeDataOn30Days')]"
          }
        }
      }
    },
    {
      "type": "microsoft.insights/dataCollectionRules",
      "apiVersion": "2021-04-01",
      "dependsOn": ["DeploySentinel"],
      "name": "[variables('dataCollectionRuleName')]",
      "location": "[parameters('location')]",
      "tags": {
        "createdBy": "Sentinel"
      },
      "properties": {
        "dataSources": {
          "windowsEventLogs": [
            {
              "name": "eventLogsDataSource",
              "scheduledTransferPeriod": "PT5M",
              "streams": [
                "Microsoft-SecurityEvent"
              ],
              "xPathQueries": [
                "Security!*[System[(EventID=5136 or EventID=5139)]]",
                "Security!*[System[(EventID=5137)]]",
                "Security!*[System[(EventID=5141)]]",
                "Security!*[System[(EventID=4662 or EventID=4661)]]",
                "Security!*[System[(EventID=4768 or EventID=4769)]]",
                "Security!*[System[(EventID=4688)]]",
                "Security!*[System[(EventID=4660)]]",
                "Security!(*[System[EventID=4656]] and ((*[EventData[Data[@Name='ObjectType']='File']]))) or (*[System[EventID=4663]] and ((*[EventData[Data[@Name='ObjectType']='File']]))) or (*[System[EventID=4661]] and ((*[EventData[Data[@Name='ObjectType']='SAM']])))",
                "Security!*[System[(EventID=4670)]]",
                "Security!*[System[(EventID=4624 or EventID=4778 or EventID=4964)]]",
                "Security!*[System[(EventID=5140 or EventID=5145)]]",
                "Security!*[System[(EventID=5154 or EventID=5159 or EventID=5155 or EventID=5158 or EventID=5156 or EventID=5157 or EventID=5031)]]",
                "Security!(*[System[EventID=4656]] and ((*[EventData[Data[@Name='ObjectType']='Process']]))) or (*[System[EventID=4663]] and ((*[EventData[Data[@Name='ObjectType']='Process']])))",
                "Security!*[System[(EventID=4689)]]",
                "Security!*[System[(EventID=4698)]]",
                "Security!*[System[(EventID=4701 or EventID=4700 or EventID=4702)]]",
                "Security!*[System[(EventID=4697)]]",
                "Security!*[System[(EventID=4725 or EventID=4722 or EventID=4717 or EventID=4740 or EventID=4738 or EventID=4781 or EventID=4767 or EventID=4718)]]",
                "Security!*[System[(EventID=4624 or EventID=4625 or EventID=4648)]]",
                "Security!*[System[(EventID=4726)]]",
                "Security!*[System[(EventID=4720)]]",
                "Security!*[System[(EventID=4670 or EventID=4657)]]",
                "Security!(*[System[EventID=4656]] and ((*[EventData[Data[@Name='ObjectType']='Key']]))) or (*[System[EventID=4663]] and ((*[EventData[Data[@Name='ObjectType']='Key']])))"
              ]
            }
          ]
        },
        "destinations": {
          "logAnalytics": [
            {
              "name": "WindowsEvents",
              "workspaceId": "[reference('DeploySentinel').outputs.workspaceIdOutput.value]",
              "workspaceResourceId": "[reference('DeploySentinel').outputs.workspaceResourceIdOutput.value]"
            }
          ]
        },
        "dataFlows": [
          {
            "streams": [
              "Microsoft-SecurityEvent"
            ],
            "destinations": [
              "WindowsEvents"
            ]
          }
        ]
      }
    },
    {
      "condition": "[not(empty(parameters('collectWinEventProviders')))]",
      "name": "collectWinDataSources",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "dependsOn": [
        "DeploySentinel"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('uri_collectWinDataSources')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[reference('DeploySentinel').outputs.workspaceName.value]"
          },
          "winEventProviders": {
            "value": "[parameters('collectWinEventProviders')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "condition": "[parameters('doenablesysmonparsers')]",
      "name": "deploySysmonWindowsParserPack",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "dependsOn": [
        "DeploySentinel"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('uri_sysmonWindowsParserPackTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[reference('DeploySentinel').outputs.workspaceName.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "name": "deployWinAD",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "dependsOn": [
        "DeploySentinel"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('uri_azure_win10_ad')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[variables('doadminusername')]"
          },
          "adminPassword": {
            "value": "[variables('doadminpassword')]"
          },
          "numberOfWorkstations": {
            "value": "[parameters('dowscount')]"
          },
          "vmNamePrefix": {
            "value": "[variables('donameprefix')]"
          },
          "windowsDesktopSKU": {
            "value": "[variables('doWSKU')]"
          },
          "windowsServerSKU": {
            "value": "[variables('doServerSKU')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "windowsServerVersion": {
            "value": "[parameters('windowsServerVersion')]"
          },
          "domainFQDN": {
            "value": "[variables('dofqdn')]"
          },
          "identityType": {
            "value": "SystemAssigned"
          },
          "remoteAccessMode": {
            "value": "[variables('doremoteaccessmode')]"
          },
          "allowedIPAddresses": {
            "value": "[parameters('allowedIPAddresses')]"
          },
          "enableSysmon": {
            "value": "[parameters('doenablesysmon')]"
          },
          "enableAADConnect": {
            "value": "[parameters('doenableaadconnect')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "name": "installAzureMonitorAgent",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "dependsOn": [
        "DeploySentinel",
        "deployWinAD"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('uri_azure_monitoragents')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualMachines": {
            "value": "[reference('deployWinAD').outputs.allWinVMsDeployed.value]"
          },
          "monitorAgent": {
            "value": "Azure Monitor Agent"
          }
        }
      }
    },
    {
      "name": "associateWindowsDCR",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "dependsOn": [
        "[resourceId('microsoft.insights/dataCollectionRules', variables('dataCollectionRuleName'))]",
        "installAzureMonitorAgent"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('uri_dcrassociation')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualMachines": {
            "value": "[reference('deployWinAD').outputs.allWinVMsDeployed.value]"
          },
          "dataCollectionRuleId": {
            "value": "[resourceId('microsoft.insights/dataCollectionRules', variables('dataCollectionRuleName'))]"
          },
          "dataCollectionRuleName": {
            "value": "[variables('dataCollectionRuleName')]"
          }
        }
      }
    },
    {
      "condition": "[not(equals(variables('doc2'), 'None'))]",
      "name": "deployC2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('uri_azure_c2')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[variables('doadminusername')]"
          },
          "authenticationType": {
            "value": "password"
          },
          "adminPasswordOrKey": {
            "value": "[variables('doadminpassword')]"
          },
          "vmName": {
            "value": "Nux01"
          },
          "ubuntuSKU": {
            "value": "[variables('doc2ubuntusku')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "allowedIPAddresses": {
            "value": "[parameters('allowedIPAddresses')]"
          },
          "c2Framework": {
            "value": "[variables('doc2')]"
          }
        }
      }
    },
    {
      "condition": "[not(equals(variables('doc2'), 'None'))]",
      "name": "vnet-c2/peering-to-remote-vnet-win",
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2019-11-01",
      "dependsOn": [
        "deployC2",
        "deployWinAD"
      ],
      "location": "[parameters('location')]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[reference('deployWinAD').outputs.virtualNetworkId.value]"
        }
      }
    },
    {
      "condition": "[not(equals(variables('doc2'), 'None'))]",
      "name": "vnet-win/peering-to-remote-vnet-c2",
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2019-11-01",
      "dependsOn": [
        "deployC2",
        "deployWinAD"
      ],
      "location": "[parameters('location')]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[if(not(equals(variables('doc2'), 'None')), reference('deployC2').outputs.virtualNetworkId.value, 'Resource not deployed')]"
        }
      }
    }
  ],
  "outputs": {
    "C2PublicIP": {
      "type": "string",
      "value": "[reference('deployC2').outputs.C2PublicIP.value]"
    },
    "DCPublicIP": {
      "type": "string",
      "value": "[reference('deployWinAD').outputs.DCPublicIP.value]"
    },
    "WSPublicIP": {
      "type": "string",
      "value": "[reference('deployWinAD').outputs.WSPublicIP.value]"
    }
  }
}
